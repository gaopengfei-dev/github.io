(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{628:function(t,s,a){t.exports=a.p+"assets/img/htmlRender.7139185e.jpeg"},790:function(t,s,a){"use strict";a.r(s);var e=a(3),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"前端性能优化篇"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端性能优化篇"}},[t._v("#")]),t._v(" 前端性能优化篇")]),t._v(" "),e("p",[t._v("从用户的角度而言，对一个网站的第一印象往往是网站的打开速度，速度越快，用户体验越好。\b 首屏作为直面用户的第一屏，其重要性不言而喻。优化\n用户体验是前端非常重要的一部分。本文主要从网页渲染过程、网页交互以及 Vue 应用优化三个角度对性能优化做一个小结。")]),t._v(" "),e("h2",{attrs:{id:"一、页面加载及渲染过程优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、页面加载及渲染过程优化"}},[t._v("#")]),t._v(" 一、页面加载及渲染过程优化")]),t._v(" "),e("p",[t._v("浏览器渲染过程")]),t._v(" "),e("p",[e("img",{attrs:{src:a(628),alt:""}})]),t._v(" "),e("p",[t._v("1、浏览器通过请求 URL 进行域名解析，向服务器发出请求，服务器将 html 文件发送到客户端。")]),t._v(" "),e("p",[t._v("2、浏览器拿到 html 文件后首先要载入 html 标签，然后在 html 标签的 head 标签中找到我们设置的 meta 和引入的 css")]),t._v(" "),e("p",[t._v("3、加载 css 文件时，浏览器又会向服务器发起请求，服务器收到请求后返回 css 文件，并加载它")]),t._v(" "),e("p",[t._v("4、加载 body 标签中的内容，开始渲染 dom；")]),t._v(" "),e("p",[t._v("5、浏览器找到 script 标签加载 js 文件，根据位置决定顺序，也可能在 body 先加载。如果 js 操作了 dom，重新渲染 dom；")]),t._v(" "),e("p",[t._v("6、直到找到</html>后加载完成")]),t._v(" "),e("h3",{attrs:{id:"crp-关键渲染路径-critical-rendering-path-优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#crp-关键渲染路径-critical-rendering-path-优化"}},[t._v("#")]),t._v(" CRP（关键渲染路径 Critical Rendering Path）优化")]),t._v(" "),e("p",[t._v("关键渲染路径是浏览器将 HTML、CSS、JavaScript 转换为在屏幕上呈现的像素内容所经历的一系列步骤。也就是我们刚刚提到的的的浏览器渲染流程。")]),t._v(" "),e("p",[t._v("为尽快完成首次渲染，我们需要最大限度减小以下三种可变因素:")]),t._v(" "),e("ul",[e("li",[t._v("关键资源的数量: 可能阻止网页首次渲染的资源。")]),t._v(" "),e("li",[t._v("关键路径长度: 获取所有关键资源所需的往返次数或总时间。")]),t._v(" "),e("li",[t._v("关键字节: 实现网页首次渲染所需的总字节数，等同于所有关键资源传送文件大小的总和。")])]),t._v(" "),e("h3",{attrs:{id:"优化-dom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优化-dom"}},[t._v("#")]),t._v(" 优化 DOM")]),t._v(" "),e("ul",[e("li",[t._v("删除不必要的代码和注释包括空格，尽量做到最小化文件。")]),t._v(" "),e("li",[t._v("可以利用 GZIP 压缩文件。")]),t._v(" "),e("li",[t._v("结合 HTTP 缓存文件。")])]),t._v(" "),e("h3",{attrs:{id:"优化-cssom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优化-cssom"}},[t._v("#")]),t._v(" 优化 CSSOM")]),t._v(" "),e("p",[t._v("首先，DOM 和 CSSOM 通常是并行构建的，所以 CSS 加载不会阻塞 DOM 的解析。")]),t._v(" "),e("p",[t._v("然而，由于 Render Tree 是依赖于 DOM Tree 和 CSSOM Tree 的，\n所以他必须等待到 CSSOM Tree 构建完成，也就是 CSS 资源加载完成(或者 CSS 资源加载失败)后，才能开始渲染。因此，CSS 加载会阻塞 Dom 的渲染。")]),t._v(" "),e("p",[t._v("由此可见，对于 CSSOM 缩小、压缩以及缓存同样重要，我们可以从这方面考虑去优化。")]),t._v(" "),e("ul",[e("li",[t._v("减少关键 CSS 元素数量")]),t._v(" "),e("li",[t._v("当我们声明样式表时，请密切关注媒体查询的类型，它们极大地影响了 CRP 的性能 。")])]),t._v(" "),e("h3",{attrs:{id:"优化-javascript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优化-javascript"}},[t._v("#")]),t._v(" 优化 JavaScript")]),t._v(" "),e("p",[t._v("当浏览器遇到 script 标记时，会阻止解析器继续操作，直到 CSSOM 构建完毕，JavaScript 才会运行并继续完成 DOM 构建过程。")]),t._v(" "),e("ul",[e("li",[t._v("async:异步脚本 当我们在 script 标记添加 async 属性以后，浏览器遇到这个 script 标记时会继续解析 DOM，同时脚本也不会被 CSSOM 阻止，即不会阻止 CRP。")]),t._v(" "),e("li",[t._v("defer:延迟脚本 与 async 的区别在于，异步脚本无法保证证能按照它们出现的次序执行。脚本需要等到文档解析后（ DOMContentLoaded 事件前）执行，而 async 允许脚本在文档解析时位于后台运行（两者下载的过程不会阻塞 DOM，但执行会）。")]),t._v(" "),e("li",[t._v("当我们的脚本不会修改 DOM 或 CSSOM 时，推荐使用 async 。")])]),t._v(" "),e("h3",{attrs:{id:"浏览器的回流与重绘"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的回流与重绘"}},[t._v("#")]),t._v(" 浏览器的回流与重绘")]),t._v(" "),e("p",[t._v("回流必出发重绘，重绘不一定会引起回流。")]),t._v(" "),e("h4",{attrs:{id:"重绘-repaint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重绘-repaint"}},[t._v("#")]),t._v(" 重绘（Repaint）")]),t._v(" "),e("p",[t._v("当页面中元素样式的改变并不影响它在文档流中的位置时（例如：color、background-color、visibility 等），浏览器会将新样式赋予给元素并重新绘制它，这个过程称为重绘。")]),t._v(" "),e("h4",{attrs:{id:"回流-reflow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回流-reflow"}},[t._v("#")]),t._v(" 回流（Reflow）")]),t._v(" "),e("p",[t._v("当 Render Tree 中部分或全部元素的尺寸、结构、或某些属性发生改变时，浏览器重新渲染部分或全部文档的过程称为回流。")]),t._v(" "),e("h4",{attrs:{id:"会导致回流的操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#会导致回流的操作"}},[t._v("#")]),t._v(" 会导致回流的操作：")]),t._v(" "),e("ul",[e("li",[t._v("页面首次渲染")]),t._v(" "),e("li",[t._v("浏览器窗口大小发生改变")]),t._v(" "),e("li",[t._v("元素尺寸或位置发生改变元素内容变化（文字数量或图片大小等等）")]),t._v(" "),e("li",[t._v("元素字体大小变化")]),t._v(" "),e("li",[t._v("添加或者删除可见的 DOM 元素")]),t._v(" "),e("li",[t._v("激活 CSS 伪类（例如:hover）")]),t._v(" "),e("li",[t._v("查询某些属性或调用某些方法")]),t._v(" "),e("li",[t._v("一些常用且会导致回流的属性和方法\nclientWidth、clientHeight、clientTop、clientLeftoffsetWidth、offsetHeight、offsetTop、offsetLeftscrollWidth、scrollHeight、scrollTop、scrollLeftscrollIntoView()、scrollIntoViewIfNeeded()、getComputedStyle()、\ngetBoundingClientRect()、scrollTo()")])]),t._v(" "),e("h4",{attrs:{id:"性能影响"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#性能影响"}},[t._v("#")]),t._v(" 性能影响")]),t._v(" "),e("p",[t._v("回流比重绘代价更大")]),t._v(" "),e("p",[t._v("有时即使仅仅回流一个单一的元素，它的父元素以及任何跟随它的元素也会产生回流。现代浏览器会对频繁的回流或重绘操作进行优化：浏览器会维护一个队列，把所有引起回流和重绘的操作放入队列中，如果队列中的任务数量或者时间间隔达到一个阈值的，浏览器就会将队列清空，进行一次批处理，这样可以把多次回流和重绘变成一次。")]),t._v(" "),e("p",[t._v("当你访问以下属性或方法时，浏览器会立刻清空队列:")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[t._v("clientWidth、clientHeight、clientTop、clientLeft\noffsetWidth、offsetHeight、offsetTop、offsetLeft\nscrollWidth、scrollHeight、scrollTop、scrollLeft\nwidth、height\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedStyle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBoundingClientRect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h4",{attrs:{id:"如何避免"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何避免"}},[t._v("#")]),t._v(" 如何避免")]),t._v(" "),e("h5",{attrs:{id:"css"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[t._v("#")]),t._v(" CSS")]),t._v(" "),e("ul",[e("li",[t._v("避免使用 table 布局。")]),t._v(" "),e("li",[t._v("尽可能在 DOM 树的最末端改变 class。")]),t._v(" "),e("li",[t._v("避免设置多层内联样式。")]),t._v(" "),e("li",[t._v("将动画效果应用到 position 属性为 absolute 或 fixed 的元素上。")]),t._v(" "),e("li",[t._v("避免使用 CSS 表达式（例如：calc()）。")])]),t._v(" "),e("h5",{attrs:{id:"javascript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),e("ul",[e("li",[t._v("避免频繁操作样式，最好一次性重写 style 属性，或者将样式列表定义为 class 并一次性更改 class 属性。")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 优化前")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" el "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("borderLeft "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1px'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("borderRight "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2px'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("padding "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5px'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 优化后,一次性修改样式，这样可以将三次重排减少到一次重排")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" el "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'; border-left: 1px ;border-right: 2px; padding: 5px;'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("ul",[e("li",[t._v("避免频繁操作 DOM，创建一个 documentFragment，在它上面应用所有 DOM 操作，最后再把它添加到文档中。")]),t._v(" "),e("li",[t._v("也可以先为元素设置 display: none，操作结束后再把它显示出来。因为在 display 属性为 none 的元素上进行的 DOM 操作不会引发回流和重绘。")]),t._v(" "),e("li",[t._v("避免频繁读取会引发回流/重绘的属性，如果确实需要多次使用，就用一个变量缓存起来。")]),t._v(" "),e("li",[t._v("对具有复杂动画的元素使用绝对定位，使它脱离文档流，否则会引起父元素及后续元素频繁回流。")])]),t._v(" "),e("h4",{attrs:{id:"图片懒加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#图片懒加载"}},[t._v("#")]),t._v(" 图片懒加载")]),t._v(" "),e("p",[t._v("图片懒加载在一些图片密集型的网站中运用比较多，通过图片懒加载可以让一些不可视的图片不去加载，避免一次性加载过多的图片导致请求阻塞（浏览器一般对同一域名下的并发请求的连接数有限制），这样就可以提高网站的加载速度，提高用户体验。")])])}),[],!1,null,null,null);s.default=r.exports}}]);